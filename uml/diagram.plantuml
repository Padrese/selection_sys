@startuml diagram

SelectiveSystem ..> Student
Student ..> Behavior
Student ..> Training
Couple ..> Student
Couple ..> Training


class Student {
    -name : string
    -behavior : Behavior
    -grades : unordered_map<string, int>
    -preferences : map<string, Training> 
    +get_name() : string
    +get_behavior() : Behavior
    +get_grade(int grade) : int
    +get_preferences() : map<string, Training> 
    +set_name(string name) : void
    +set_behavior(Behavior behavior) : void
    +push_grade(int grade) : void
    +remove_grade(int grade) : void
    +set_preference(Training training) : void
    +remove_preference(Training training) : void
    +remove_all_preferences() : void
}



class SelectiveSystem {
    -system_name : string
    + galeShapley() : map<Couple> 
    + get_system_name() : string
}

class Training {
    - theme : string
    - location : string
    - ranking : int
    + getLocation() : string
    + getRanking() : int
    + setRanking(int Ranking) : void
}


class Behavior {
    -justified_absence : int
    -nonjustified_absence : int
    -justified_delays : int
    -non_justified_delays : int
    -bool personal_issues
    -detention_hours : int
    -reports : int
    -disciplinary_boards : int
    +get_justified_absence() : int
    +get_nonjustified_absence() : int
    +get_justified_delays() : int
    +get_non_justified_delays() : int
    +get_personal_issues() : bool
    +get_detention_hours() : int
    +get_reports() : int
    +get_personal_issues() : bool
    +get_disciplinary_boards() : bool
    +set_justified_absence(int nb_justified_absence) : void
    +set_nonjustified_absence(int nb_nonjustified_absence) : void
    +set_justified_delays(int nb_justified_delays) : void
    +set_non_justified_delays(int nb_non_justified_delays) : void
    +set_personal_issues(bool has_issues) : void
    +set_detention_hours(int nb_detention_hours) : void
    +set_reports(int nb_reports) : void
    +set_disciplinary_boards(int nb_disciplinary boards) : void
}

class Couple {
    -student : Student
    -training : Training
    + getStudent() : Student
    + getTraining() : Training
    + setStudent(Student student) : void
    + setTraining(Training training) : void
}


@enduml
